/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/led/led.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip { chain-length = <42>; };

/ {
    behaviors {
        tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    chosen { zmk,underglow = &led_strip; };

    keymap {
        compatible = "zmk,keymap";

        layer_4 {
            bindings = <
&mt LA(F4) TAB                  &kp Q  &kp W  &kp E                  &lt 1 R    &kp T        &kp Y      &kp U      &kp I          &lt 2 O  &kp P          &to 2
&mt LCTRL DEL                   &kp A  &kp S  &kp D                  &kp F      &kp G        &kp H      &kp J      &kp K          &kp L    &kp RIGHT_ALT  &kp ENTER
&mt LEFT_SHIFT LA(RIGHT_ARROW)  &kp Z  &kp X  &kp C                  &kp V      &kp B        &kp N      &kp M      &kp ESCAPE     &kp DOT  &to 1          &mt RIGHT_SHIFT QUESTION
                                              &mt LEFT_ALT LA(LEFT)  &mkp LCLK  &kp SPACE    &kp SPACE  &mkp RCLK  &kp BACKSPACE
            >;
        };

        layer_below {
            // -----------------------------------------------------------------------------------------
            // |      |  !  |  @  |  #  |  $  |    %     |   |  ^  |  &  |  *  |  (  |  )  |   \   |
            // |      |  1  |  2  |  3  |  4  |    5     |   |  -  |  =  |  `  |  [  |  ]  |  "|"  |
            // | SHFT |  6  |  7  |  8  |  9  |    0     |   |  _  |  +  |  ~  |  {  |  }  | RSHFT |
            //                     | GUI |     | ALT/ENT |   | BKSP | HYPER/SPACE |    |

            bindings = <
&mt LCTRL ESCAPE          &kp TILDE     &kp APOSTROPHE                &kp UP_ARROW                &kp DOUBLE_QUOTES               &kp F4       &mt F7 N7        &mt F8 N8        &mt F9 N9        &kp PLUS   &to 2            &to 0
&kp LCTRL                 &kp STAR      &kp LEFT_ARROW                &kp DOWN                    &kp RIGHT                       &kp F5       &mt F4 NUMBER_4  &mt F5 N5        &mt F6 NUMBER_6  &kp MINUS  &kp BACKSPACE    &mt LCTRL SEMICOLON
&mt LEFT_SHIFT LA(RIGHT)  &kp LEFT_WIN  &mt LC(LA(DELETE)) BACKSLASH  &mt LESS_THAN LEFT_BRACKET  &mt GREATER_THAN RIGHT_BRACKET  &kp F9       &mt F1 NUMBER_1  &mt F2 NUMBER_2  &mt F3 NUMBER_3  &kp DOT    &mt EQUAL COMMA  &lt 2 SLASH
                                                                      &mt LEFT_ALT LA(LEFT)       &mkp LCLK                       &kp SPACE    &kp ENTER        &mkp RCLK        &mt F11 N0
            >;
        };

        ABLETON {
            bindings = <
&kp ESCAPE      &kp TAB    &mt W LC(LS(W))      &mt LC(LS(E)) LC(E)  &mt LC(LS(R)) LC(R)      &mt LC(LS(T)) LC(T)    &kp LC(Y)            &mt LC(LS(U)) LC(U)  &mt LC(LA(DELETE)) LC(I)  &kp LC(LA(O))  &to 1         &to 0
&kp LCTRL       &kp LC(A)  &mt LC(LS(S)) LC(S)  &kp LC(D)            &mt LC(LS(LA(F))) LC(F)  &mt LC(LS(G)) LC(G)    &mt H DELETE         &kp LC(J)            &kp LC(K)                 &kp LC(L)      &kp UP_ARROW  &lt 4 LC(LA(P))
&kp LEFT_SHIFT  &kp LC(Z)  &mt LC(LS(X)) LC(X)  &kp LC(C)            &kp LC(V)                &kp LC(LA(B))          &mt LC(LS(N)) LC(N)  &mt LC(LS(M)) LC(M)  &kp LC(COMMA)             &lt 3 LEFT     &kp DOWN      &lt 5 RIGHT
                                                &kp LEFT_ALT         &mkp LCLK                &kp SPACE              &kp ENTER            &mkp RCLK            &kp BACKSPACE
            >;
        };

        layer_above {
            // -----------------------------------------------------------------------------------------
            // |  |  F1  |  F2  |  F3  |  F4  |  F5 |            |  F6  |  F7     |  F8     |  F9        |  F10     |     |
            // |  | Prev | Next | Vol - | Vol + | Play/Pause |   |      | LFT     | DWN     |  UP        |  RGT     |     |  HOME   |
            // |  BTCLR  | BT1 | BT2 | BT3 | BT4 | BT5 |   |            | RGB_TOG | RGB_EFF |  RGB_BRI   |  RGB_BRD |     |   END  |
            //                    |     |     |    |                  |     |     |     |

            bindings = <
&to 0       &to 1         &to 2         &bt BT_CLR_ALL  &bt BT_NXT    &ext_power EP_ON     &rgb_ug RGB_TOG  &rgb_ug RGB_ON   &rgb_ug RGB_OFF  &rgb_ug RGB_HUI  &rgb_ug RGB_HUD                   &rgb_ug RGB_SAI
&bt BT_PRV  &trans        &bt BT_SEL 0  &trans          &out OUT_TOG  &ext_power EP_OFF    &rgb_ug RGB_SAD  &kp C_MUTE       &kp C_VOL_DN     &kp C_VOL_UP     &rgb_ug RGB_BRI                   &rgb_ug RGB_BRD
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4         &rgb_ug RGB_SPI  &rgb_ug RGB_SPD  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_COLOR_HSB(241,0,100)  &rgb_ug RGB_COLOR_HSB(0,100,34)
                                        &trans          &mkp LCLK     &trans               &trans           &mkp MB2         &trans
            >;
        };

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | TAB  |  Q  |  W  |  E  |  R  |    T    |   |  Y  |  U   |  I  |  O  |  P  | ESC |
            // | CTRL |  A  |  S  |  D  |  F  |    G    |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |    B    |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //                    | GUI | RSE | ALT/ENT |   | BKSP | HYPER/SPC  | LWR |

            bindings = <
&mt LA(F4) ESCAPE         &kp Q  &kp W  &kp E                    &kp R      &kp T        &kp Y      &kp U      &kp I             &kp O    &kp P          &to 3
&kp LCTRL                 &kp A  &kp S  &kp D                    &kp F      &kp G        &kp H      &kp J      &kp K             &kp L    &kp RIGHT_ALT  &kp ENTER
&mt LEFT_SHIFT LA(RIGHT)  &kp Z  &kp X  &kp C                    &kp V      &kp B        &kp N      &kp M      &mt CAPSLOCK TAB  &kp DOT  &to 1          &mt RIGHT_SHIFT QUESTION
                                        &mt LALT LA(LEFT_ARROW)  &mkp LCLK  &kp SPACE    &kp SPACE  &mkp RCLK  &kp BACKSPACE
            >;
        };

        layer_5 {
            bindings = <
&trans  &kp TILDE  &kp APOS  &kp DOUBLE_QUOTES  &kp DOUBLE_QUOTES  &kp F4    &mt F7 N7        &mt F8 N8        &mt F9 N9        &kp PLUS   &trans         &to 0
&trans  &trans     &trans    &trans             &trans             &trans    &mt F4 NUMBER_4  &mt F5 N5        &mt F6 NUMBER_6  &kp MINUS  &kp BACKSPACE  &trans
&trans  &trans     &trans    &trans             &trans             &trans    &mt F1 NUMBER_1  &mt F2 NUMBER_2  &mt F3 NUMBER_3  &kp DOT    &trans         &trans
                             &trans             &trans             &trans    &trans           &mkp RCLK        &mt F11 N0
            >;
        };
    };
};
